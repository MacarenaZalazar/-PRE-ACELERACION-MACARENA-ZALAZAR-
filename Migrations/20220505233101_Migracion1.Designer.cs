// <auto-generated />
using System;
using ChallengeAlkemyC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChallengeAlkemyC.Migrations
{
    [DbContext(typeof(DisneyContext))]
    [Migration("20220505233101_Migracion1")]
    partial class Migracion1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChallengeAlkemyC.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeliculasIPelicula")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeliculasIPelicula");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("ChallengeAlkemyC.Models.Pelicula", b =>
                {
                    b.Property<int>("IPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonajesId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IPelicula");

                    b.HasIndex("PersonajesId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("ChallengeAlkemyC.Models.Personaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Edad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Historia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Peso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("ChallengeAlkemyC.Models.Genero", b =>
                {
                    b.HasOne("ChallengeAlkemyC.Models.Pelicula", "Peliculas")
                        .WithMany()
                        .HasForeignKey("PeliculasIPelicula");

                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("ChallengeAlkemyC.Models.Pelicula", b =>
                {
                    b.HasOne("ChallengeAlkemyC.Models.Personaje", "Personajes")
                        .WithMany("Peliculas")
                        .HasForeignKey("PersonajesId");

                    b.Navigation("Personajes");
                });

            modelBuilder.Entity("ChallengeAlkemyC.Models.Personaje", b =>
                {
                    b.Navigation("Peliculas");
                });
#pragma warning restore 612, 618
        }
    }
}
